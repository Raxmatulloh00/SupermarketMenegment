@page "/cashier_console"
@attribute [Authorize(Policy = "CashierOnly")]

@if (!string.IsNullOrWhiteSpace(cashirName))
{
	<div class="row">
		<div class="col-7"><h3>Cashier's Console</h3></div>
		<div class="col-2"><label for="cashier">Cashier Name:</label></div>
		<div class="col-3">
			<div class="form-group">
				<input type="text" id="cashier" class="form-control" @bind-value="cashirName" />
			</div>
		</div>
	</div>

	<br />
	<div class="row">
		<div class="col-4">
			
			<SelectProductForSellingComponent OnProductSelected="SelectProduct"></SelectProductForSellingComponent>
			<br />
			<SellProductComponent CaashierName="@cashirName"
							  SelectedProduct="selectedProduct"
							  OnProductSold="SellProduct"></SellProductComponent>
		</div>
		<div class="col">
			<br>
			<TodayTransactionsComponent @ref="transactionComponent"></TodayTransactionsComponent>
		</div>
	</div>
}
@code {
	private TodayTransactionsComponent transactionComponent;
	private Product selectedProduct;
	private string cashirName;

	[CascadingParameter]
	private Task<AuthenticationState> _authState{ get; set; }

	private AuthenticationState authState;

	protected override async Task OnInitializedAsync()
	{
		authState = await _authState;
		cashirName = authState.User.Identity.Name;
	}

	protected override void OnAfterRender(bool firstRender)
	{
		base.OnAfterRender(firstRender);
		if (firstRender)
		{
			transactionComponent.LoadTransactions(cashirName);
		}
	}
	private void SelectProduct(Product product)
	{
		selectedProduct = product;
	}
	private void SellProduct(Product product)
	{
		transactionComponent.LoadTransactions(cashirName);
	}
}